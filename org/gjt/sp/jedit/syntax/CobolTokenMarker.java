/*
 * Decompiled with CFR 0_102.
 */
package org.gjt.sp.jedit.syntax;

import javax.swing.text.Segment;
import org.gjt.sp.jedit.syntax.KeywordMap;
import org.gjt.sp.jedit.syntax.SyntaxUtilities;
import org.gjt.sp.jedit.syntax.TokenMarker;

public class CobolTokenMarker
extends TokenMarker {
    private static KeywordMap cobolKeywords;
    private KeywordMap keywords = CobolTokenMarker.getKeywords();
    private int lastOffset;
    private int lastKeyword;

    public byte markTokensImpl(byte by, Segment segment, int n) {
        int n2;
        char[] arrc = segment.array;
        this.lastOffset = n2 = segment.offset;
        this.lastKeyword = n2;
        int n3 = segment.count + n2;
        block15 : for (int i = n2; i < n3; ++i) {
            int n4 = i + 1;
            char c = arrc[i];
            switch (by) {
                case 0: {
                    switch (c) {
                        case 'E': {
                            if (!SyntaxUtilities.regionMatches(false, segment, n4, "XEC SQL")) break;
                            this.doKeyword(segment, i, c);
                            i+=7;
                            by = (byte)8;
                            continue block15;
                        }
                        case '*': {
                            this.addToken(i - this.lastOffset, by);
                            this.addToken(n3 - i, 1);
                            by = 0;
                            this.lastOffset = this.lastKeyword = n3;
                            break block15;
                        }
                        case '\"': {
                            this.doKeyword(segment, i, c);
                            this.addToken(i - this.lastOffset, by);
                            by = (byte)3;
                            this.lastOffset = this.lastKeyword = i;
                            continue block15;
                        }
                        case '\'': {
                            this.doKeyword(segment, i, c);
                            this.addToken(i - this.lastOffset, by);
                            by = (byte)4;
                            this.lastOffset = this.lastKeyword = i;
                            continue block15;
                        }
                        case ' ': {
                            this.doKeyword(segment, i, c);
                        }
                    }
                    continue block15;
                }
                case 8: {
                    if (c != 'E' || !SyntaxUtilities.regionMatches(false, segment, n4, "ND-EXEC")) continue block15;
                    this.addToken((i+=8) - this.lastOffset, by);
                    by = 0;
                    this.lastOffset = this.lastKeyword = i;
                    continue block15;
                }
                case 3: {
                    if (c != '\"') continue block15;
                    this.addToken(n4 - this.lastOffset, by);
                    by = 0;
                    this.lastOffset = this.lastKeyword = n4;
                    continue block15;
                }
                case 4: {
                    if (c != '\'') continue block15;
                    this.addToken(n4 - this.lastOffset, 3);
                    by = 0;
                    this.lastOffset = this.lastKeyword = n4;
                    continue block15;
                }
                default: {
                    throw new InternalError("Invalid state: " + by);
                }
            }
        }
        if (by == 0) {
            this.doKeyword(segment, n3, '\u0000');
        }
        switch (by) {
            default: 
        }
        this.addToken(n3 - this.lastOffset, by);
        return by;
    }

    public static KeywordMap getKeywords() {
        if (cobolKeywords == null) {
            cobolKeywords = new KeywordMap(false);
            cobolKeywords.add("ACCEPT", 6);
            cobolKeywords.add("ACCESS", 6);
            cobolKeywords.add("ACTUAL", 6);
            cobolKeywords.add("ADD", 6);
            cobolKeywords.add("ADDRESS", 6);
            cobolKeywords.add("ADVANCING", 6);
            cobolKeywords.add("AFTER", 6);
            cobolKeywords.add("ALL", 6);
            cobolKeywords.add("ALPHABET", 6);
            cobolKeywords.add("ALPHABETIC", 6);
            cobolKeywords.add("ALPHABETIC-LOWER", 6);
            cobolKeywords.add("ALPHABETIC-UPPER", 6);
            cobolKeywords.add("ALPHANUMERIC", 6);
            cobolKeywords.add("ALPHANUMERIC-EDITED", 6);
            cobolKeywords.add("ALSO", 6);
            cobolKeywords.add("ALTER", 6);
            cobolKeywords.add("ALTERNATE", 6);
            cobolKeywords.add("AND", 6);
            cobolKeywords.add("ANY", 6);
            cobolKeywords.add("API", 6);
            cobolKeywords.add("APPLY", 6);
            cobolKeywords.add("ARE", 6);
            cobolKeywords.add("AREA", 6);
            cobolKeywords.add("AREAS", 6);
            cobolKeywords.add("ASCENDING", 6);
            cobolKeywords.add("ASSIGN", 6);
            cobolKeywords.add("AT", 6);
            cobolKeywords.add("AUTHOR", 6);
            cobolKeywords.add("AUTO", 6);
            cobolKeywords.add("AUTO-SKIP", 6);
            cobolKeywords.add("AUTOMATIC", 6);
            cobolKeywords.add("BACKGROUND-COLOR", 6);
            cobolKeywords.add("BACKGROUND-COLOUR", 6);
            cobolKeywords.add("BACKWARD", 6);
            cobolKeywords.add("BASIS", 6);
            cobolKeywords.add("BEEP", 6);
            cobolKeywords.add("BEFORE", 6);
            cobolKeywords.add("BEGINNING", 6);
            cobolKeywords.add("BELL", 6);
            cobolKeywords.add("BINARY", 6);
            cobolKeywords.add("BLANK", 6);
            cobolKeywords.add("BLINK", 6);
            cobolKeywords.add("BLOCK", 6);
            cobolKeywords.add("BOTTOM", 6);
            cobolKeywords.add("BY", 6);
            cobolKeywords.add("C01", 6);
            cobolKeywords.add("C02", 6);
            cobolKeywords.add("C03", 6);
            cobolKeywords.add("C04", 6);
            cobolKeywords.add("C05", 6);
            cobolKeywords.add("C06", 6);
            cobolKeywords.add("C07", 6);
            cobolKeywords.add("C08", 6);
            cobolKeywords.add("C09", 6);
            cobolKeywords.add("C10", 6);
            cobolKeywords.add("C11", 6);
            cobolKeywords.add("C12", 6);
            cobolKeywords.add("CALL", 6);
            cobolKeywords.add("CALL-CONVENTION", 6);
            cobolKeywords.add("CANCEL", 6);
            cobolKeywords.add("CBL", 6);
            cobolKeywords.add("CD", 6);
            cobolKeywords.add("CF", 6);
            cobolKeywords.add("CH", 6);
            cobolKeywords.add("CHAIN", 6);
            cobolKeywords.add("CHAINING", 6);
            cobolKeywords.add("CHANGED", 6);
            cobolKeywords.add("CHARACTER", 6);
            cobolKeywords.add("CHARACTERS", 6);
            cobolKeywords.add("CLASS", 6);
            cobolKeywords.add("CLOCK-UNITS", 6);
            cobolKeywords.add("CLOSE", 6);
            cobolKeywords.add("COBOL", 6);
            cobolKeywords.add("CODE", 6);
            cobolKeywords.add("CODE-SET", 6);
            cobolKeywords.add("COL", 6);
            cobolKeywords.add("COLLATING", 6);
            cobolKeywords.add("COLUMN", 6);
            cobolKeywords.add("COM-REG", 6);
            cobolKeywords.add("COMMA", 6);
            cobolKeywords.add("COMMIT", 6);
            cobolKeywords.add("COMMON", 6);
            cobolKeywords.add("COMMUNICATION", 6);
            cobolKeywords.add("COMP", 6);
            cobolKeywords.add("COMP-0", 6);
            cobolKeywords.add("COMP-1", 6);
            cobolKeywords.add("COMP-2", 6);
            cobolKeywords.add("COMP-3", 6);
            cobolKeywords.add("COMP-4", 6);
            cobolKeywords.add("COMP-5", 6);
            cobolKeywords.add("COMP-6", 6);
            cobolKeywords.add("COMP-X", 6);
            cobolKeywords.add("COMPUTATIONAL", 6);
            cobolKeywords.add("COMPUTATIONAL-0", 6);
            cobolKeywords.add("COMPUTATIONAL-1", 6);
            cobolKeywords.add("COMPUTATIONAL-2", 6);
            cobolKeywords.add("COMPUTATIONAL-3", 6);
            cobolKeywords.add("COMPUTATIONAL-4", 6);
            cobolKeywords.add("COMPUTATIONAL-5", 6);
            cobolKeywords.add("COMPUTATIONAL-6", 6);
            cobolKeywords.add("COMPUTATIONAL-X", 6);
            cobolKeywords.add("COMPUTE", 6);
            cobolKeywords.add("CONFIGURATION", 6);
            cobolKeywords.add("CONSOLE", 6);
            cobolKeywords.add("CONTAINS", 6);
            cobolKeywords.add("CONTENT", 6);
            cobolKeywords.add("CONTINUE", 6);
            cobolKeywords.add("CONTROL", 6);
            cobolKeywords.add("CONTROLS", 6);
            cobolKeywords.add("CONVERTING", 6);
            cobolKeywords.add("COPY", 6);
            cobolKeywords.add("CORE-INDEX", 6);
            cobolKeywords.add("CORR", 6);
            cobolKeywords.add("CORRESPONDING", 6);
            cobolKeywords.add("COUNT", 6);
            cobolKeywords.add("CRT", 6);
            cobolKeywords.add("CRT-UNDER", 6);
            cobolKeywords.add("CURRENCY", 6);
            cobolKeywords.add("CURRENT-DATE", 6);
            cobolKeywords.add("CURSOR", 6);
            cobolKeywords.add("CYCLE", 6);
            cobolKeywords.add("CYL-INDEX", 6);
            cobolKeywords.add("CYL-OVERFLOW", 6);
            cobolKeywords.add("DATA", 6);
            cobolKeywords.add("DATE", 6);
            cobolKeywords.add("DATE-COMPILED", 6);
            cobolKeywords.add("DATE-WRITTEN", 6);
            cobolKeywords.add("DAY", 6);
            cobolKeywords.add("DAY-OF-WEEK", 6);
            cobolKeywords.add("DBCS", 6);
            cobolKeywords.add("DE", 6);
            cobolKeywords.add("DEBUG", 6);
            cobolKeywords.add("DEBUG-CONTENTS", 6);
            cobolKeywords.add("DEBUG-ITEM", 6);
            cobolKeywords.add("DEBUG-LINE", 6);
            cobolKeywords.add("DEBUG-NAME", 6);
            cobolKeywords.add("DEBUG-SUB-1", 6);
            cobolKeywords.add("DEBUG-SUB-2", 6);
            cobolKeywords.add("DEBUG-SUB-3", 6);
            cobolKeywords.add("DEBUGGING", 6);
            cobolKeywords.add("DECIMAL-POINT", 6);
            cobolKeywords.add("DECLARATIVES", 6);
            cobolKeywords.add("DELETE", 6);
            cobolKeywords.add("DELIMITED", 6);
            cobolKeywords.add("DELIMITER", 6);
            cobolKeywords.add("DEPENDING", 6);
            cobolKeywords.add("DESCENDING", 6);
            cobolKeywords.add("DESTINATION", 6);
            cobolKeywords.add("DETAIL", 6);
            cobolKeywords.add("DISABLE", 6);
            cobolKeywords.add("DISK", 6);
            cobolKeywords.add("DISP", 6);
            cobolKeywords.add("DISPLAY", 6);
            cobolKeywords.add("DISPLAY-1", 6);
            cobolKeywords.add("DISPLAY-ST", 6);
            cobolKeywords.add("DIVIDE", 6);
            cobolKeywords.add("DIVISION", 6);
            cobolKeywords.add("DOWN", 6);
            cobolKeywords.add("DUPLICATES", 6);
            cobolKeywords.add("DYNAMIC", 6);
            cobolKeywords.add("ECHO", 6);
            cobolKeywords.add("EGCS", 6);
            cobolKeywords.add("EGI", 6);
            cobolKeywords.add("EJECT", 6);
            cobolKeywords.add("ELSE", 6);
            cobolKeywords.add("EMI", 6);
            cobolKeywords.add("EMPTY-CHECK", 6);
            cobolKeywords.add("ENABLE", 6);
            cobolKeywords.add("END", 6);
            cobolKeywords.add("END-ACCEPT", 6);
            cobolKeywords.add("END-ADD", 6);
            cobolKeywords.add("END-CALL", 6);
            cobolKeywords.add("END-CHAIN", 6);
            cobolKeywords.add("END-COMPUTE", 6);
            cobolKeywords.add("END-DELETE", 6);
            cobolKeywords.add("END-DISPLAY", 6);
            cobolKeywords.add("END-DIVIDE", 6);
            cobolKeywords.add("END-EVALUATE", 6);
            cobolKeywords.add("END-IF", 6);
            cobolKeywords.add("END-INVOKE", 6);
            cobolKeywords.add("END-MULTIPLY", 6);
            cobolKeywords.add("END-OF-PAGE", 6);
            cobolKeywords.add("END-PERFORM", 6);
            cobolKeywords.add("END-READ", 6);
            cobolKeywords.add("END-RECEIVE", 6);
            cobolKeywords.add("END-RETURN", 6);
            cobolKeywords.add("END-REWRITE", 6);
            cobolKeywords.add("END-SEARCH", 6);
            cobolKeywords.add("END-START", 6);
            cobolKeywords.add("END-STRING", 6);
            cobolKeywords.add("END-SUBTRACT", 6);
            cobolKeywords.add("END-UNSTRING", 6);
            cobolKeywords.add("END-WRITE", 6);
            cobolKeywords.add("ENDING", 6);
            cobolKeywords.add("ENTER", 6);
            cobolKeywords.add("ENTRY", 6);
            cobolKeywords.add("ENVIRONMENT", 6);
            cobolKeywords.add("EOL", 6);
            cobolKeywords.add("EOP", 6);
            cobolKeywords.add("EOS", 6);
            cobolKeywords.add("EQUAL", 6);
            cobolKeywords.add("EQUALS", 6);
            cobolKeywords.add("ERASE", 6);
            cobolKeywords.add("ERROR", 6);
            cobolKeywords.add("ESCAPE", 6);
            cobolKeywords.add("ESI", 6);
            cobolKeywords.add("EVALUATE", 6);
            cobolKeywords.add("EVERY", 6);
            cobolKeywords.add("EXAMINE", 6);
            cobolKeywords.add("EXCEEDS", 6);
            cobolKeywords.add("EXCEPTION", 6);
            cobolKeywords.add("EXCESS-3", 6);
            cobolKeywords.add("EXCLUSIVE", 6);
            cobolKeywords.add("EXEC", 6);
            cobolKeywords.add("EXECUTE", 6);
            cobolKeywords.add("EXHIBIT", 6);
            cobolKeywords.add("EXIT", 6);
            cobolKeywords.add("EXTEND", 6);
            cobolKeywords.add("EXTENDED-SEARCH", 6);
            cobolKeywords.add("EXTERNAL", 6);
            cobolKeywords.add("FACTORY", 6);
            cobolKeywords.add("FALSE", 6);
            cobolKeywords.add("FD", 6);
            cobolKeywords.add("FH-FCD", 6);
            cobolKeywords.add("FH-KEYDEF", 6);
            cobolKeywords.add("FILE", 6);
            cobolKeywords.add("FILE-CONTROL", 6);
            cobolKeywords.add("FILE-ID", 6);
            cobolKeywords.add("FILE-LIMIT", 6);
            cobolKeywords.add("FILE-LIMITS", 6);
            cobolKeywords.add("FILLER", 6);
            cobolKeywords.add("FINAL", 6);
            cobolKeywords.add("FIRST", 6);
            cobolKeywords.add("FIXED", 6);
            cobolKeywords.add("FOOTING", 6);
            cobolKeywords.add("FOR", 6);
            cobolKeywords.add("FOREGROUND-COLOR", 6);
            cobolKeywords.add("FOREGROUND-COLOUR", 6);
            cobolKeywords.add("FROM", 6);
            cobolKeywords.add("FULL", 6);
            cobolKeywords.add("FUNCTION", 6);
            cobolKeywords.add("GENERATE", 6);
            cobolKeywords.add("GIVING", 6);
            cobolKeywords.add("GLOBAL", 6);
            cobolKeywords.add("GO", 6);
            cobolKeywords.add("GOBACK", 6);
            cobolKeywords.add("GREATER", 6);
            cobolKeywords.add("GRID", 6);
            cobolKeywords.add("GROUP", 6);
            cobolKeywords.add("HEADING", 6);
            cobolKeywords.add("HIGH", 6);
            cobolKeywords.add("HIGH-VALUE", 6);
            cobolKeywords.add("HIGH-VALUES", 6);
            cobolKeywords.add("HIGHLIGHT", 6);
            cobolKeywords.add("I-O", 6);
            cobolKeywords.add("I-O-CONTROL", 6);
            cobolKeywords.add("ID", 6);
            cobolKeywords.add("IDENTIFICATION", 6);
            cobolKeywords.add("IF", 6);
            cobolKeywords.add("IGNORE", 6);
            cobolKeywords.add("IN", 6);
            cobolKeywords.add("INDEX", 6);
            cobolKeywords.add("INDEXED", 6);
            cobolKeywords.add("INDICATE", 6);
            cobolKeywords.add("INHERITING", 6);
            cobolKeywords.add("INITIAL", 6);
            cobolKeywords.add("INITIALIZE", 6);
            cobolKeywords.add("INITIATE", 6);
            cobolKeywords.add("INPUT", 6);
            cobolKeywords.add("INPUT-OUTPUT", 6);
            cobolKeywords.add("INSERT", 6);
            cobolKeywords.add("INSPECT", 6);
            cobolKeywords.add("INSTALLATION", 6);
            cobolKeywords.add("INTO", 6);
            cobolKeywords.add("INVALID", 6);
            cobolKeywords.add("INVOKE", 6);
            cobolKeywords.add("IS", 6);
            cobolKeywords.add("JAPANESE", 6);
            cobolKeywords.add("JUST", 6);
            cobolKeywords.add("JUSTIFIED", 6);
            cobolKeywords.add("KANJI", 6);
            cobolKeywords.add("KEPT", 6);
            cobolKeywords.add("KEY", 6);
            cobolKeywords.add("KEYBOARD", 6);
            cobolKeywords.add("LABEL", 6);
            cobolKeywords.add("LAST", 6);
            cobolKeywords.add("LEADING", 6);
            cobolKeywords.add("LEAVE", 6);
            cobolKeywords.add("LEFT", 6);
            cobolKeywords.add("LEFT-JUSTIFY", 6);
            cobolKeywords.add("LEFTLINE", 6);
            cobolKeywords.add("LENGTH", 6);
            cobolKeywords.add("LENGTH-CHECK", 6);
            cobolKeywords.add("LESS", 6);
            cobolKeywords.add("LIMIT", 6);
            cobolKeywords.add("LIMITS", 6);
            cobolKeywords.add("LIN", 6);
            cobolKeywords.add("LINAGE", 6);
            cobolKeywords.add("LINAGE-COUNTER", 6);
            cobolKeywords.add("LINE", 6);
            cobolKeywords.add("LINE-COUNTER", 6);
            cobolKeywords.add("LINES", 6);
            cobolKeywords.add("LINKAGE", 6);
            cobolKeywords.add("LOCAL-STORAGE", 6);
            cobolKeywords.add("LOCK", 6);
            cobolKeywords.add("LOCKING", 6);
            cobolKeywords.add("LOW", 6);
            cobolKeywords.add("LOW-VALUE", 6);
            cobolKeywords.add("LOW-VALUES", 6);
            cobolKeywords.add("LOWER", 6);
            cobolKeywords.add("LOWLIGHT", 6);
            cobolKeywords.add("MANUAL", 6);
            cobolKeywords.add("MASTER-INDEX", 6);
            cobolKeywords.add("MEMORY", 6);
            cobolKeywords.add("MERGE", 6);
            cobolKeywords.add("MESSAGE", 6);
            cobolKeywords.add("METHOD", 6);
            cobolKeywords.add("MODE", 6);
            cobolKeywords.add("MODULES", 6);
            cobolKeywords.add("MORE-LABELS", 6);
            cobolKeywords.add("MOVE", 6);
            cobolKeywords.add("MULTIPLE", 6);
            cobolKeywords.add("MULTIPLY", 6);
            cobolKeywords.add("NAME", 6);
            cobolKeywords.add("NAMED", 6);
            cobolKeywords.add("NATIONAL", 6);
            cobolKeywords.add("NATIONAL-EDITED", 6);
            cobolKeywords.add("NATIVE", 6);
            cobolKeywords.add("NCHAR", 6);
            cobolKeywords.add("NEGATIVE", 6);
            cobolKeywords.add("NEXT", 6);
            cobolKeywords.add("NO", 6);
            cobolKeywords.add("NO-ECHO", 6);
            cobolKeywords.add("NOMINAL", 6);
            cobolKeywords.add("NOT", 6);
            cobolKeywords.add("NOTE", 6);
            cobolKeywords.add("NSTD-REELS", 6);
            cobolKeywords.add("NULL", 6);
            cobolKeywords.add("NULLS", 6);
            cobolKeywords.add("NUMBER", 6);
            cobolKeywords.add("NUMERIC", 6);
            cobolKeywords.add("NUMERIC-EDITED", 6);
            cobolKeywords.add("OBJECT", 6);
            cobolKeywords.add("OBJECT-COMPUTER", 6);
            cobolKeywords.add("OBJECT-STORAGE", 6);
            cobolKeywords.add("OCCURS", 6);
            cobolKeywords.add("OF", 6);
            cobolKeywords.add("OFF", 6);
            cobolKeywords.add("OMITTED", 6);
            cobolKeywords.add("ON", 6);
            cobolKeywords.add("OOSTACKPTR", 6);
            cobolKeywords.add("OPEN", 6);
            cobolKeywords.add("OPTIONAL", 6);
            cobolKeywords.add("OR", 6);
            cobolKeywords.add("ORDER", 6);
            cobolKeywords.add("ORGANIZATION", 6);
            cobolKeywords.add("OTHER", 6);
            cobolKeywords.add("OTHERWISE", 6);
            cobolKeywords.add("OUTPUT", 6);
            cobolKeywords.add("OVERFLOW", 6);
            cobolKeywords.add("OVERLINE", 6);
            cobolKeywords.add("PACKED-DECIMAL", 6);
            cobolKeywords.add("PADDING", 6);
            cobolKeywords.add("PAGE", 6);
            cobolKeywords.add("PAGE-COUNTER", 6);
            cobolKeywords.add("PARAGRAPH", 6);
            cobolKeywords.add("PASSWORD", 6);
            cobolKeywords.add("PERFORM", 6);
            cobolKeywords.add("PF", 6);
            cobolKeywords.add("PH", 6);
            cobolKeywords.add("PIC", 6);
            cobolKeywords.add("PICTURE", 6);
            cobolKeywords.add("PLUS", 6);
            cobolKeywords.add("POINTER", 6);
            cobolKeywords.add("POS", 6);
            cobolKeywords.add("POSITION", 6);
            cobolKeywords.add("POSITIONING", 6);
            cobolKeywords.add("POSITIVE", 6);
            cobolKeywords.add("PREVIOUS", 6);
            cobolKeywords.add("PRINT", 6);
            cobolKeywords.add("PRINT-SWITCH", 6);
            cobolKeywords.add("PRINTER", 6);
            cobolKeywords.add("PRINTER-1", 6);
            cobolKeywords.add("PRINTING", 6);
            cobolKeywords.add("PRIVATE", 6);
            cobolKeywords.add("PROCEDURE", 6);
            cobolKeywords.add("PROCEDURE-POINTER", 6);
            cobolKeywords.add("PROCEDURES", 6);
            cobolKeywords.add("PROCEED", 6);
            cobolKeywords.add("PROCESSING", 6);
            cobolKeywords.add("PROGRAM", 6);
            cobolKeywords.add("PROGRAM-ID", 6);
            cobolKeywords.add("PROMPT", 6);
            cobolKeywords.add("PROTECTED", 6);
            cobolKeywords.add("PUBLIC", 6);
            cobolKeywords.add("PURGE", 6);
            cobolKeywords.add("QUEUE", 6);
            cobolKeywords.add("QUOTE", 6);
            cobolKeywords.add("QUOTES", 6);
            cobolKeywords.add("RANDOM", 6);
            cobolKeywords.add("RANGE", 6);
            cobolKeywords.add("RD", 6);
            cobolKeywords.add("READ", 6);
            cobolKeywords.add("READY", 6);
            cobolKeywords.add("RECEIVE", 6);
            cobolKeywords.add("RECORD", 6);
            cobolKeywords.add("RECORD-OVERFLOW", 6);
            cobolKeywords.add("RECORDING", 6);
            cobolKeywords.add("RECORDS", 6);
            cobolKeywords.add("REDEFINES", 6);
            cobolKeywords.add("REEL", 6);
            cobolKeywords.add("REFERENCE", 6);
            cobolKeywords.add("REFERENCES", 6);
            cobolKeywords.add("RELATIVE", 6);
            cobolKeywords.add("RELEASE", 6);
            cobolKeywords.add("RELOAD", 6);
            cobolKeywords.add("REMAINDER", 6);
            cobolKeywords.add("REMARKS", 6);
            cobolKeywords.add("REMOVAL", 6);
            cobolKeywords.add("RENAMES", 6);
            cobolKeywords.add("REORG-CRITERIA", 6);
            cobolKeywords.add("REPLACE", 6);
            cobolKeywords.add("REPLACING", 6);
            cobolKeywords.add("REPORT", 6);
            cobolKeywords.add("REPORTING", 6);
            cobolKeywords.add("REPORTS", 6);
            cobolKeywords.add("REQUIRED", 6);
            cobolKeywords.add("REREAD", 6);
            cobolKeywords.add("RERUN", 6);
            cobolKeywords.add("RESERVE", 6);
            cobolKeywords.add("RESET", 6);
            cobolKeywords.add("RETURN", 6);
            cobolKeywords.add("RETURN-CODE", 6);
            cobolKeywords.add("RETURNING", 6);
            cobolKeywords.add("REVERSE", 6);
            cobolKeywords.add("REVERSE-VIDEO", 6);
            cobolKeywords.add("REVERSED", 6);
            cobolKeywords.add("REWIND", 6);
            cobolKeywords.add("REWRITE", 6);
            cobolKeywords.add("RF", 6);
            cobolKeywords.add("RH", 6);
            cobolKeywords.add("RIGHT", 6);
            cobolKeywords.add("RIGHT-JUSTIFY", 6);
            cobolKeywords.add("ROLLBACK", 6);
            cobolKeywords.add("ROUNDED", 6);
            cobolKeywords.add("RUN", 6);
            cobolKeywords.add("S01", 6);
            cobolKeywords.add("S02", 6);
            cobolKeywords.add("S03", 6);
            cobolKeywords.add("S04", 6);
            cobolKeywords.add("S05", 6);
            cobolKeywords.add("SAME", 6);
            cobolKeywords.add("SCREEN", 6);
            cobolKeywords.add("SD", 6);
            cobolKeywords.add("SEARCH", 6);
            cobolKeywords.add("SECTION", 6);
            cobolKeywords.add("SECURE", 6);
            cobolKeywords.add("SECURITY", 6);
            cobolKeywords.add("SEEK", 6);
            cobolKeywords.add("SEGMENT", 6);
            cobolKeywords.add("SEGMENT-LIMIT", 6);
            cobolKeywords.add("SELECT", 6);
            cobolKeywords.add("SELECTIVE", 6);
            cobolKeywords.add("SEND", 6);
            cobolKeywords.add("SENTENCE", 6);
            cobolKeywords.add("SEPARATE", 6);
            cobolKeywords.add("SEQUENCE", 6);
            cobolKeywords.add("SEQUENTIAL", 6);
            cobolKeywords.add("SERVICE", 6);
            cobolKeywords.add("SET", 6);
            cobolKeywords.add("SHIFT-IN", 6);
            cobolKeywords.add("SHIFT-OUT", 6);
            cobolKeywords.add("SIGN", 6);
            cobolKeywords.add("SIZE", 6);
            cobolKeywords.add("SKIP1", 6);
            cobolKeywords.add("SKIP2", 6);
            cobolKeywords.add("SKIP3", 6);
            cobolKeywords.add("SORT", 6);
            cobolKeywords.add("SORT-CONTROL", 6);
            cobolKeywords.add("SORT-CORE-SIZE", 6);
            cobolKeywords.add("SORT-FILE-SIZE", 6);
            cobolKeywords.add("SORT-MERGE", 6);
            cobolKeywords.add("SORT-MESSAGE", 6);
            cobolKeywords.add("SORT-MODE-SIZE", 6);
            cobolKeywords.add("SORT-OPTION", 6);
            cobolKeywords.add("SORT-RETURN", 6);
            cobolKeywords.add("SOURCE", 6);
            cobolKeywords.add("SOURCE-COMPUTER", 6);
            cobolKeywords.add("SPACE", 6);
            cobolKeywords.add("SPACE-FILL", 6);
            cobolKeywords.add("SPACES", 6);
            cobolKeywords.add("SPECIAL-NAMES", 6);
            cobolKeywords.add("STANDARD", 6);
            cobolKeywords.add("STANDARD-1", 6);
            cobolKeywords.add("STANDARD-2", 6);
            cobolKeywords.add("START", 6);
            cobolKeywords.add("STATUS", 6);
            cobolKeywords.add("STOP", 6);
            cobolKeywords.add("STORE", 6);
            cobolKeywords.add("STRING", 6);
            cobolKeywords.add("SUB-QUEUE-1", 6);
            cobolKeywords.add("SUB-QUEUE-2", 6);
            cobolKeywords.add("SUB-QUEUE-3", 6);
            cobolKeywords.add("SUBTRACT", 6);
            cobolKeywords.add("SUM", 6);
            cobolKeywords.add("SUPER", 6);
            cobolKeywords.add("SUPPRESS", 6);
            cobolKeywords.add("SYMBOLIC", 6);
            cobolKeywords.add("SYNC", 6);
            cobolKeywords.add("SYNCHRONIZED", 6);
            cobolKeywords.add("SYSIN", 6);
            cobolKeywords.add("SYSIPT", 6);
            cobolKeywords.add("SYSLST", 6);
            cobolKeywords.add("SYSOUT", 6);
            cobolKeywords.add("SYSPCH", 6);
            cobolKeywords.add("SYSPUNCH", 6);
            cobolKeywords.add("TAB", 6);
            cobolKeywords.add("TABLE", 6);
            cobolKeywords.add("TALLY", 6);
            cobolKeywords.add("TALLYING", 6);
            cobolKeywords.add("TAPE", 6);
            cobolKeywords.add("TERMINAL", 6);
            cobolKeywords.add("TERMINATE", 6);
            cobolKeywords.add("TEST", 6);
            cobolKeywords.add("TEXT", 6);
            cobolKeywords.add("THAN", 6);
            cobolKeywords.add("THEN", 6);
            cobolKeywords.add("THROUGH", 6);
            cobolKeywords.add("THRU", 6);
            cobolKeywords.add("TIME", 6);
            cobolKeywords.add("TIME-OF-DAY", 6);
            cobolKeywords.add("TIME-OUT", 6);
            cobolKeywords.add("TIMEOUT", 6);
            cobolKeywords.add("TIMES", 6);
            cobolKeywords.add("TITLE", 6);
            cobolKeywords.add("TO", 6);
            cobolKeywords.add("TOP", 6);
            cobolKeywords.add("TOTALED", 6);
            cobolKeywords.add("TOTALING", 6);
            cobolKeywords.add("TRACE", 6);
            cobolKeywords.add("TRACK-AREA", 6);
            cobolKeywords.add("TRACK-LIMIT", 6);
            cobolKeywords.add("TRACKS", 6);
            cobolKeywords.add("TRAILING", 6);
            cobolKeywords.add("TRAILING-SIGN", 6);
            cobolKeywords.add("TRANSFORM", 6);
            cobolKeywords.add("TRUE", 6);
            cobolKeywords.add("TYPE", 6);
            cobolKeywords.add("TYPEDEF", 6);
            cobolKeywords.add("UNDERLINE", 6);
            cobolKeywords.add("UNEQUAL", 6);
            cobolKeywords.add("UNIT", 6);
            cobolKeywords.add("UNLOCK", 6);
            cobolKeywords.add("UNSTRING", 6);
            cobolKeywords.add("UNTIL", 6);
            cobolKeywords.add("UP", 6);
            cobolKeywords.add("UPDATE", 6);
            cobolKeywords.add("UPON", 6);
            cobolKeywords.add("UPPER", 6);
            cobolKeywords.add("UPSI-0", 6);
            cobolKeywords.add("UPSI-1", 6);
            cobolKeywords.add("UPSI-2", 6);
            cobolKeywords.add("UPSI-3", 6);
            cobolKeywords.add("UPSI-4", 6);
            cobolKeywords.add("UPSI-5", 6);
            cobolKeywords.add("UPSI-6", 6);
            cobolKeywords.add("UPSI-7", 6);
            cobolKeywords.add("USAGE", 6);
            cobolKeywords.add("USE", 6);
            cobolKeywords.add("USER", 6);
            cobolKeywords.add("USING", 6);
            cobolKeywords.add("VALUE", 6);
            cobolKeywords.add("VALUES", 6);
            cobolKeywords.add("VARIABLE", 6);
            cobolKeywords.add("VARYING", 6);
            cobolKeywords.add("WAIT", 6);
            cobolKeywords.add("WHEN", 6);
            cobolKeywords.add("WHEN-COMPILED", 6);
            cobolKeywords.add("WITH", 6);
            cobolKeywords.add("WORDS", 6);
            cobolKeywords.add("WORKING-STORAGE", 6);
            cobolKeywords.add("WRITE", 6);
            cobolKeywords.add("WRITE-ONLY", 6);
            cobolKeywords.add("WRITE-VERIFY", 6);
            cobolKeywords.add("ZERO", 6);
            cobolKeywords.add("ZERO-FILL", 6);
            cobolKeywords.add("ZEROES", 6);
            cobolKeywords.add("ZEROS", 6);
            cobolKeywords.add("ACOS", 7);
            cobolKeywords.add("ANNUITY", 7);
            cobolKeywords.add("ASIN", 7);
            cobolKeywords.add("ATAN", 7);
            cobolKeywords.add("CHAR", 7);
            cobolKeywords.add("COS", 7);
            cobolKeywords.add("CURRENT-DATE", 7);
            cobolKeywords.add("DATE-OF-INTEGER", 7);
            cobolKeywords.add("DAY-OF-INTEGER", 7);
            cobolKeywords.add("FACTORIAL", 7);
            cobolKeywords.add("INTEGER", 7);
            cobolKeywords.add("INTEGER-OF-DATE", 7);
            cobolKeywords.add("INTEGER-OF-DAY", 7);
            cobolKeywords.add("INTEGER-PART", 7);
            cobolKeywords.add("LOG", 7);
            cobolKeywords.add("LOG10", 7);
            cobolKeywords.add("LOWER-CASE", 7);
            cobolKeywords.add("MAX", 7);
            cobolKeywords.add("MEAN", 7);
            cobolKeywords.add("MEDIAN", 7);
            cobolKeywords.add("MIDRANGE", 7);
            cobolKeywords.add("MIN", 7);
            cobolKeywords.add("MOD", 7);
            cobolKeywords.add("NUMVAL", 7);
            cobolKeywords.add("NUMVAL-C", 7);
            cobolKeywords.add("ORD", 7);
            cobolKeywords.add("ORD-MAX", 7);
            cobolKeywords.add("ORD-MIN", 7);
            cobolKeywords.add("PRESENT-VALUE", 7);
            cobolKeywords.add("RANDOM", 7);
            cobolKeywords.add("RANGE", 7);
            cobolKeywords.add("REM", 7);
            cobolKeywords.add("REVERSE", 7);
            cobolKeywords.add("SIN", 7);
            cobolKeywords.add("SQRT", 7);
            cobolKeywords.add("STANDARD-DEVIATION", 7);
            cobolKeywords.add("SUM", 7);
            cobolKeywords.add("TAN", 7);
            cobolKeywords.add("UPPER-CASE", 7);
            cobolKeywords.add("VARIANCE", 7);
            cobolKeywords.add("WHEN-COMPILED", 7);
            cobolKeywords.add("[COPY-PREFIX]", 4);
            cobolKeywords.add("[COUNT]", 4);
            cobolKeywords.add("[DISPLAY]", 4);
            cobolKeywords.add("[EXECUTE]", 4);
            cobolKeywords.add("[PG]", 4);
            cobolKeywords.add("[PREFIX]", 4);
            cobolKeywords.add("[PROGRAM]", 4);
            cobolKeywords.add("[SPECIAL-PREFIX]", 4);
            cobolKeywords.add("[TESTCASE]", 4);
        }
        return cobolKeywords;
    }

    private boolean doKeyword(Segment segment, int n, char c) {
        int n2 = n + 1;
        int n3 = n - this.lastKeyword;
        byte by = this.keywords.lookup(segment, this.lastKeyword, n3);
        if (by != 0) {
            if (this.lastKeyword != this.lastOffset) {
                this.addToken(this.lastKeyword - this.lastOffset, 0);
            }
            this.addToken(n3, by);
            this.lastOffset = n;
        }
        this.lastKeyword = n2;
        return false;
    }
}

